name: Xcode - Build and Analyze

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set Default Scheme
        run: |
          # Cambiar al directorio iosApp
          if [ -d "iosApp" ]; then
            cd iosApp
          else
            echo "No 'iosApp' folder found!"
            exit 1
          fi
      
          # Ejecutar xcodebuild -list en el directorio ios
          scheme_list=$(xcodebuild -list -json 2>/dev/null | tr -d "\n")
          if [ -z "$scheme_list" ]; then
            echo "No Xcode project or workspace found in the 'iosApp' folder!"
            exit 1
          fi
      
          # Extraer el esquema predeterminado
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          if [ -z "$default" ]; then
            echo "No default scheme found!"
            exit 1
          fi
      
          # Crear el archivo default y verificar su contenido
          echo $default > default
          echo "Using default scheme: $default"
          cat default

      - name: Build
        env:
            scheme: ${{ 'default' }}
        run: |
            if [ -z "$scheme" ]; then
              if [ -f default ]; then
                scheme=$(cat default)
              else
                echo "No scheme found and no default file available!"
                exit 1
              fi
            fi
        
            # Buscar en la carpeta 'iosApp' para el archivo .xcworkspace o .xcodeproj
            if [ "`ls -A iosApp | grep -i \\.xcworkspace\$`" ]; then
              filetype_parameter="workspace" && file_to_build="`ls -A iosApp | grep -i \\.xcworkspace\$`"
            elif [ "`ls -A iosApp | grep -i \\.xcodeproj\$`" ]; then
              filetype_parameter="project" && file_to_build="`ls -A iosApp | grep -i \\.xcodeproj\$`"
            else
              echo "No se encontr√≥ un archivo .xcworkspace o .xcodeproj en la carpeta 'iosApp'"
              exit 1
            fi
            file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
        
            # Ejecutar el build, clean y analyze
            xcodebuild clean build analyze -scheme "$scheme" -"$filetype_parameter" "iosApp/$file_to_build" | xcpretty && exit ${PIPESTATUS[0]}
