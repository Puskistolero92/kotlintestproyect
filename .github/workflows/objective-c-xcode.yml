name: Xcode - Build and Analyze

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set Default Scheme
        run: |
          # Cambiar al directorio iosApp
          if [ -d "iosApp" ]; then
            cd iosApp
          else
            echo "No 'iosApp' folder found!"
            exit 1
          fi
      
          # Ejecutar xcodebuild -list en el directorio ios
          scheme_list=$(xcodebuild -list -json 2>/dev/null | tr -d "\n")
          if [ -z "$scheme_list" ]; then
            echo "No Xcode project or workspace found in the 'iosApp' folder!"
            exit 1
          fi
      
          # Extraer el esquema predeterminado
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          if [ -z "$default" ]; then
            echo "No default scheme found!"
            exit 1
          fi
      
          # Crear el archivo default y verificar su contenido
          echo $default > default
          echo "Using default scheme: $default"
          cat default
      - name: Debug Schemes Available
        run: |
          cd iosApp
          xcodebuild -list

      - name: Build and Run on Simulator
        env:
          scheme: iosApp
        run: |
          # Verificar que el esquema sea válido
          if [ -z "$scheme" ]; then
            if [ -f default ]; then
              scheme=$(cat default)
            else
              echo "No scheme found and no default file available!"
              exit 1
            fi
          fi
      
          # Cambiar al directorio de iOS si es necesario
          if [ -d "iosApp" ]; then
            cd iosApp
          else
            echo "'iosApp' folder not found!"
            exit 1
          fi
      
          # Verificar si hay un archivo .xcworkspace o .xcodeproj
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then
            filetype_parameter="workspace" 
            file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
          elif [ "`ls -A | grep -i \\.xcodeproj\$`" ]; then
            filetype_parameter="project" 
            file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
          else
            echo "No .xcworkspace or .xcodeproj file found in the 'iosApp' folder!"
            exit 1
          fi
      
          # Asegurarse de que el archivo no tenga espacios al principio o al final
          file_to_build=$(echo $file_to_build | awk '{$1=$1; print}')
      
          # Construir la app usando el esquema y el archivo
          echo "Building with scheme: $scheme, file: $file_to_build"
          xcodebuild clean build -scheme "$scheme" -"$filetype_parameter" "$file_to_build"
      
          # Ejecutar en el simulador de iOS
          echo "Running the app on iOS Simulator"
          xcodebuild test -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination 'platform=iOS Simulator,name=iPhone 13'
      
          # Verificar si la compilación y ejecución en el simulador fue exitosa
          if [ $? -ne 0 ]; then
            echo "Build or simulation failed with error code $?"
            exit 1
          fi
